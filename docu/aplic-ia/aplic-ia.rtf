{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Arial;}
{\f1\fnil\fcharset0\fprq0\fttruetype NULL;}
{\f2\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f3\fnil\fcharset0\fprq0\fttruetype Courier New;}
{\f4\fnil\fcharset0\fprq0\fttruetype Dingbats;}
{\f5\fnil\fcharset0\fprq0\fttruetype Symbol;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;}
{\stylesheet
{\s34\fi-431\li720 Tick List;}
{\s24\fi-431\li720\sbasedon25 Lower Roman List;}
{\s26\tx431\sbasedon12\snext25 Numbered Heading 1;}
{\s27\tx431\sbasedon13\snext25 Numbered Heading 2;}
{\s28\tx431\sbasedon14\snext25 Numbered Heading 3;}
{\*\cs8\sbasedon25 Endnote Text;}
{\s6\fi-431\li720 Diamond List;}
{\s29\fi-431\li720 Numbered List;}
{\*\cs7\fs20\super Endnote Reference;}
{\s4\tx1584\sbasedon26\snext25 Chapter Heading;}
{\s32\fi-431\li720 Square List;}
{\s5\fi-431\li720 Dashed List;}
{\s37\fi-431\li720\sbasedon29 Upper Roman List;}
{\s21\fi-431\li720 Heart List;}
{\s36\fi-431\li720\sbasedon29 Upper Case List;}
{\s17\sl240\slmult1 Heading 6;}
{\s1\li1440\ri1440\sa120\sbasedon25 Block Text;}
{\s25\f2\fs24\lang1034 Normal;}
{\s3\fi-431\li720 Bullet List;}
{\s11\fi-431\li720 Hand List;}
{\*\cs10\fs20\sbasedon25 Footnote Text;}
{\s12\sl240\slmult1\sb440\sa60\f0\fs34\b\sbasedon25\snext25 Heading 1;}
{\s13\sl240\slmult1\sb440\sa60\f0\fs28\b\sbasedon25\snext25 Heading 2;}
{\s14\sl240\slmult1\sb440\sa60\f0\fs24\b\sbasedon25\snext25 Heading 3;}
{\s15\sl240\slmult1 Heading 4;}
{\s16\sl240\slmult1 Heading 5;}
{\s23\fi-431\li720\sbasedon29 Lower Case List;}
{\s18\sl240\slmult1 Heading 7;}
{\s19\sl240\slmult1 Heading 8;}
{\s20\sl240\slmult1 Heading 9;}
{\*\cs9\fs20\super Footnote Reference;}
{\s31\tx1584\sbasedon26\snext25 Section Heading;}
{\s22\fi-431\li720 Implies List;}
{\s2\fi-431\li720 Box List;}
{\s33\fi-431\li720 Star List;}
{\s30\f3\sbasedon25 Plain Text;}
{\s35\fi-431\li720 Triangle List;}}
\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\facingp\titlepg{\info}\deftab720\viewkind1\paperw12240\paperh15840\margl1440\margr1440\widowctl
{\headerl\pard\plain
\pard\plain\ltrpar\ql\itap0{\f2\fs24\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb769\sa429\sl240\slmult1\itap0\tqc\tx4680\tqr\tx9360{\f2\fs24\lang1034{\*\listtag0}\abinodiroverride\ltrch \tab \tab }{\f2\fs20\i\lang1034{\*\listtag0}Aplicaciones Pr\'e1cticas de Inteligencia Artificial}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0\par}{\f2\fs20\i\lang1034{\*\listtag0}}
{\headerr\pard\plain
\par\pard\plain\ltrpar\ql\itap0{\f2\fs24\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb769\sa429\sl240\slmult1\itap0\tqc\tx4680\tqr\tx9360{\f2\fs24\lang1034{\*\listtag0}\abinodiroverride\ltrch \tab \tab }{\f2\fs20\i\lang1034{\*\listtag0}Aplicaciones Pr\'e1cticas de Inteligencia Artificial}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0\par}{\f2\fs20\i\lang1034{\*\listtag0}}
{\headerf\pard\plain
\par\pard\plain\ltrpar\ql\itap0{\f2\fs20\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb769\sa429\sl240\slmult1\itap0\tqc\tx4680\tqr\tx9360{\f2\fs24\lang1034{\*\listtag0}\abinodiroverride\ltrch \tab \tab }
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0\par}{\f2\fs24\lang1034{\*\listtag0}}
{\footerl\pard\plain
\par\pard\plain\ltrpar\ql\itap0{\f2\fs20\i\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb769\sa909\sl240\slmult1\itap0\tqc\tx4680\tqr\tx9360{\f2\fs24\lang1034{\*\listtag0}\abinodiroverride\ltrch \tab \tab }{\field{\*\fldinst {\f2\fs20\i\lang1034{\*\listtag0} PAGE }}{\fldrslt {\noproof  ?}}}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0\par}{\f2\fs24\lang1034{\*\listtag0}}
{\footerr\pard\plain
\par\pard\plain\ltrpar\ql\itap0{\f2\fs20\i\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb769\sa909\sl240\slmult1\itap0\tqc\tx4680\tqr\tx9360{\f2\fs24\lang1034{\*\listtag0}\abinodiroverride\ltrch \tab \tab }{\field{\*\fldinst {\f2\fs20\i\lang1034{\*\listtag0} PAGE }}{\fldrslt {\noproof  ?}}}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0\par}{\f2\fs24\lang1034{\*\listtag0}}
{\footerf\pard\plain
\par\pard\plain\ltrpar\ql\itap0{\f2\fs24\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb769\sa909\sl240\slmult1\itap0\tqc\tx4680\tqr\tx9360{\f2\fs24\lang1034{\*\listtag0}\abinodiroverride\ltrch \tab \tab }{\field{\*\fldinst {\f2\fs20\i\lang1034{\*\listtag0} PAGE }}{\fldrslt {\noproof  ?}}}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0\par}{\f2\fs24\lang1034{\*\listtag0}
}\sectd\sbknone\colsx0\headery0\margbsxn1919\pgncont\ltrsect
\pard\plain\ltrpar\qc\li960\sb372\sl646\slmult1\itap0{\f0\fs49\b\lang1034{\*\listtag0}\abinodiroverride\ltrch Aplicaciones Pr\'e1cticas de Inteligencia Artificial}
\par\pard\plain\ltrpar\qc\li960\sb372\sl646\slmult1\itap0{\f0\fs34\b\lang1034{\*\listtag0}\abinodiroverride\ltrch David Arroyo Men\'e9ndez}
\par\pard\plain\ltrpar\qc\li960\sb215\sl448\slmult1\itap0{\f0\fs34\b\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li1309\ri350\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch En este art\'edculo se mostrar\'e1n algunas de las principales aplicaciones para las cuales se utilizan las t\'e9cnicas de Inteligencia Artificial, partiendo de las t\'e9cnicas m\'e1s sencillas y haciendo una breve explicaci\'f3n de su funcionamiento y llegango a aquellas m\'e1s novedosas y de reciente utilizaci\'f3n. As\'ed mismo, se ilustrar\'e1n las explicaciones mediante explicaciones de c\'f3digo y de aplicaciones libres disponibles.}{\*\bkmkstart ID_intro}{\*\bkmkend ID_intro}
\par\pard\plain\ltrpar\ql\sb259\s13\sl448\slmult1\itap0{\f0\fs34\b\lang0{\*\listtag0}\abinodiroverride\ltrch 1. Introducci\'f3n}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Este art\'edculo ha sido titulado }{\f2\fs20\i\lang1034{\*\listtag0}Aplicaciones Pr\'e1cticas de Inteligencia Artificial}{\f2\fs20\lang1034{\*\listtag0} y esta introducci\'f3n explicar\'e1 tal t\'edtulo. Por aplicaci\'f3n pr\'e1ctica entendemos utilizar alguna t\'e9cnica derivada de un \'e1rea del conocimiento para resolver un problema concreto que afecta a nuestra vida cotidiana. Para no complicarnos, definiremos Inteligencia Artificial tal y como lo hacen Rich y Knight, esto es, lograr que las m\'e1quinas realicen tareas que por el momento hacen mejor los humanos.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Turing pens\'f3 que si una m\'e1quina se comporta en todos los aspectos como inteligente, entonces debe ser inteligente. Por lo que si un n\'famero alto de humanos no puede diferenciar a una m\'e1quina de una persona en una conversaci\'f3n es porque se comporta de manera inteligente. Esto se llam\'f3 el Test de Turing (http://plato.stanford.edu/entries/turing-test) y el primer programa en pasarlo fue Eliza que imitaba el comportamiento de un psicoanalista en un chat de internet. Eliza daba respuestas que eran preguntas acercas de lo que estabas diciendo, con lo cual sin ning\'fan conocimiento real de psicolog\'eda Eliza pasaba el test de Turing. Las soluciones que se aportan a las tareas que realizan mejor los humanos suponen muchas veces un compromiso entre parecer que se comporta de manera inteligente y realizar los procesos mentales que hacemos los humanos. Para ver una implementaci\'f3n libre de Eliza pod\'e9is hacer }{\f3\fs18\lang1034{\*\listtag0}Esc-x doctor}{\f2\fs20\lang1034{\*\listtag0} en vuestro emacs.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Demos ahora un repaso para ver cu\'e1les pueden ser esas tareas que, en principio, los humanos realizan mejor que las m\'e1quinas:}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Juegos. Durantes algunos a\'f1os los fabricantes de ordenadores demostraban la potencia de su tecnolog\'eda jugando al ajedrez \'f3 a las damas contra campeones mundiales.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Consejos. Los humanos solemos pedir consejo a otros humanos cuando padecemos una enfermedad, se nos estropea el coche, ante la compra de una casa \'f3 para otras decisiones que necesitamos de un conocimiento que no siempre poseemos. Desde hace a\'f1os los sistemas basados en conocimiento \'f3 sistemas expertos hacen esta tarea con efectividad similar a como lo har\'eda un experto en la materia.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Lenguaje Natural. Hoy en d\'eda las m\'e1quinas no hablan nuestro idioma: lenguajes de programaci\'f3n, l\'edneas de comando, \'f3 interfaces gr\'e1ficas nos sirven para comunicarnos con \'e9stos, pero el comunicarnos con ellos como nos comunicamos con personas constituye un reto que revolucionar\'eda la inform\'e1tica con aplicaciones inimaginables.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Aprendizaje. Una de las principales diferencias entre seres vivos e inertes es la capacidad de adaptarse a los cambios, la capacidad de aprender. Algoritmos de aprendizaje autom\'e1tico son cada d\'eda m\'e1s utilizados en una cantidad creciente de aplicaciones.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Empat\'eda. Rara vez el ordenador se pone en el lugar del humano comprendiendo su objetivo abstracto y ayud\'e1ndole a solucionarlo \'bfpueden las m\'e1quinas hacer tal cosa?}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Sentido com\'fan. Existe una gran cantidad de conocimiento que aprendemos en nuestra m\'e1s tierna infancia que las personas conocemos como lo relativo a consideraciones del tiempo, el espacio, los materiales, ...y que incluso las aplicaciones que requieren cierta inteligencia como los sistemas basados en conocimiento rara vez incluyen.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Pensar con neuronas. Tal vez si conseguimos crear un sistema artificial que simulara nuestro sistema neurol\'f3gico y lo entren\'e1ramos en un entorno adecuado pueda llegar a tener un nivel de inteligencia similar al nuestro. Lo cierto, es que este tipo de sistemas est\'e1 obteniendo muy buenos resultados en problemas que hab\'eda sido muy dif\'edcil abordar por otras v\'edas como por ejemplo el reconocimiento de formas.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch En este art\'edculo veremos que las t\'e9cnicas que solucionan \'f3 se aproximan a la soluci\'f3n de tales problem\'e1ticas nos ayudan a resolver cuestiones de nuestra vida cotidiana y, que adem\'e1s esto puede hacerse utilizando software libre.}{\*\bkmkstart ID_juegos}{\*\bkmkend ID_juegos}
\par\pard\plain\ltrpar\ql\sb259\s13\sl448\slmult1\itap0{\f0\fs34\b\lang0{\*\listtag0}\abinodiroverride\ltrch 2. Juegos}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch La mayor\'eda de los juegos de mesa y una gran cantidad de problemas inform\'e1ticos pueden resolverse mediante una adecuada modelizaci\'f3n en estados y aplicar un algoritmo de b\'fasqueda entre estos estados.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Para acotar el problema, pensemos en un juego de tablero de 2 jugadores, por ejemplo, las tres en raya, las damas, el ajedrez, el othello, etc. \'bfC\'f3mo podr\'eda programarse un juego de este tipo?:}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Bien, en primer lugar, un tablero es una estructura de datos de tipo matriz donde cada elemento puede ser ocupado por el jugador 1, ocupado por el jugador 2, \'f3 vacio (en juegos como el ajedrez donde cada jugador tiene diferentes fichas habr\'eda que completar el enfoque). Una partida es una secuencia de estados por los que pasa un tablero. Ahora veamos c\'f3mo deber\'eda actuar nuestro sistema inteligente para ganarnos en una partida.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Una primera aproximaci\'f3n podr\'eda ser tener todas las posibles partidas en memoria y aplicar solo los movimientos que han llevado a partidas victoriosas.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Otro enfoque ser\'eda actuar en cada turno, teniendo en cuenta ciertas reglas est\'e1ticas (ej: ciertos if). Un ejemplo de reglas en las tres en raya puede ser: si tengo dos fichas alineadas entonces ocupa el \'faltimo lugar vac\'edo y gana la partida, si el oponente tiene 2 fichas alineadas ocupa el lugar vacio y evita la victoria del oponente, en cualquier otro caso mueve de manera aleatoria.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}En general, para este tipo de juegos se utiliza la estrategia minimax que imita el comportamiento humano de examinar por anticipado un cierto n\'famero de jugadas, explorando el grafo de tableros que se generar\'edan tras un movimiento dado. En este enfoque existe una funci\'f3n de evaluaci\'f3n que da un valor a cada posible movimiento.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Para ilustrar la implementaci\'f3n de estos enfoques recomiendo instalar el paquete tictactoe que implementa las 3 en raya con 2 niveles de dificultad easy (implementa reglas tontas) y hard (implementa minimax). Dejo el c\'f3digo de las funciones clave al lector:}
\par\pard\plain\ltrpar\ql\li960\sb200\sl259\slmult1\itap0{\f2\fs20\b\lang0{\*\listtag0}\abinodiroverride\ltrch Ejemplo 1. Extracto de c\'f3digo de tictactoe}
\par\pard\plain\ltrpar\ql\li960\sb99\sl233\slmult1\itap0{\f2\fs20\b\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f2\fs20\b\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch   # implements a simple win/block/random-move AI}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch   def move_ai_easy}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     if (m = blockWin) >= 0}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       @gamefield.field[m] = 2}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     else}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       # set random point}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       while true}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         x = rand(3)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         y = rand(3)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         if @gamefield.get(x,y) == 0}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch           @gamefield.set(x,y)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch           break}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     @nmoves += 1}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch   end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch   # implements a more clever AI using the negamax tree search method}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch   def move_ai_hard}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     best = -Inf}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     besti = -1}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     @gamefield.player = 1}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     order = [4,0,2,6,8,1,3,5,7] # see text}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     0.upto(8) do |ctr|}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       i = order[ctr]}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       if @gamefield.field[i] == 0}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         @gamefield.field[i] = 2}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         value = -@gamefield.negamax}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         @gamefield.field[i] = 0}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         if value > best}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch           best = value}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch           besti = i}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch         end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       }
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       break if (@nmoves == 0) && (best == 0) # see text}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     }
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     @gamefield.player = 2}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     @gamefield.field[besti] = 2}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     @nmoves += 1}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch   end}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       }
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch De este modo, queda ilustrado el modo en que se pueden aplicar t\'e9cnicas de Inteligencia Artificial en los juegos.}
\par\pard\plain\ltrpar\ql\sb259\s13\sl448\slmult1\itap0{\f0\fs34\b\lang0{\*\listtag0}\abinodiroverride\ltrch 3. Sistemas Expertos}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Los sistemas expertos resuelven problemas que normalmente son solucionados por expertos humanos.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Un sistema experto se compone de una base de conocimiento del dominio en cuesti\'f3n, mecanismos de razonamiento para aplicar conocimiento a los problemas que se proponen, mecanismos para explicar a los usuarios el razonamiento utilizado a la hora de ofrecer una respuesta y mecanismos de aprendizaje y adquisici\'f3n de nuevo conocimiento.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Para crear una base de conocimiento es necesario contar con al menos un experto humano del dominio en cuesti\'f3n. Se puede adquirir su conocimiento a partir de entrevistas \'f3 mediante interfaces amigables para que lo introduzca. Pero tambi\'e9n es muy importante una adecuada modelizaci\'f3n de su conocimiento.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Los mecanismos de representaci\'f3n del conocimiento que se pueden encontrar son: l\'f3gica, redes, marcos y reglas. No obstante, lo m\'e1s utilizado es una adecuada combinaci\'f3n de marcos y reglas.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Es posible representar el conocimiento mediante hechos o instancias y reglas \'f3 alg\'fan otro mecanismo para inferir nuevos hechos. Pero deberemos plantearnos si a partir de los hechos vamos a ir aplicando reglas (encadenamiento hacia adelante), \'f3 si por el contrario nos interesa responder a una cuesti\'f3n concreta (ej: \'bf tengo gripe?) e ir satisfaciendo subobjetivos hasta llegar a hechos que demuestren la veracidad \'f3 falsedad de la frase (encadenamiento hacia atr\'e1s). Tambi\'e9n es conveniente plantear: qu\'e9 reglas ejecutar antes, cu\'e1les est\'e1n listas para ser ejecutadas, si ejecutar las reglas cuyos antecedentes se actualizaron recientemente, \'f3 si ejecutar primero reglas espec\'edficas. Todos estos mecanismos de control del razonamiento pueden ser tenidos en cuenta a la hora de construir nuestro sistema experto.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch El software libre nos proporciona buenas herramientas para el desarrollo de sistemas expertos. Algunas de ellas son: clips (http://www.ghg.net/clips/CLIPS.html) y babylon (http://www-cgi.cs.cmu.edu/afs/cs/project/ai-repository/ai/areas/expert/systems/babylon/0.html).}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Para ilustrar este apartado recomiendo instalar clips que est\'e1 empaquetado para un buen n\'famero de sistemas. En debian basta con hacer }{\f2\fs20\b\lang1034{\*\listtag0}apt-get install xclips clips clips-doc}{\f2\fs20\lang1034{\*\listtag0}. xclips es un interfaz gr\'e1fico para utilizar clips, recomiendo su uso, para saciar la curiosidad del cacharreo. Desde l\'ednea de comandos podemos ejecutar lo siguiente:}
\par\pard\plain\ltrpar\ql\li960\sb200\sl259\slmult1\itap0{\f2\fs20\b\lang0{\*\listtag0}\abinodiroverride\ltrch Ejemplo 2. Ejemplo de uso de clips}
\par\pard\plain\ltrpar\ql\li960\sb99\sl233\slmult1\itap0{\f2\fs20\b\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch [darroyo@turing:/usr/share/doc/clips-doc/examples]$ clips}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch CLIPS> (load "auto.clp")}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Defining deffunction: ask-question}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Defining deffunction: yes-or-no-p}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Defining defrule: normal-engine-state-conclusions +j}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch ...}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch CLIPS> (run)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch CLIPS> (reset)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch CLIPS> (run)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch The Engine Diagnosis Expert System}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Does the engine start (yes/no)?}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       }
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch De este modo, se prueba un ejemplo de sistema experto cuyo objetivo es solucionar aver\'edas con el coche. El sistema va haciendo preguntas acerca de los s\'edntomas que presenta el coche y finalmente otorga un diagn\'f3stico. Al ejecutarlo, el primer (run) no me funcion\'f3 prob\'e9 a hacer un (reset) y luego volver a hacer (run) y ya funcionaba. Os recomiendo que ech\'e9is un vistazo al fichero auto.clp.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Espero que este apartado haya servido para entender qu\'e9 una m\'e1quina puede modelar el conocimiento de un experto en, al menos, un dominio limitado y que esto es \'fatil para recibir asesor\'eda \'f3 consejos para las que en condiciones normales precisar\'edamos de un experto humano.}
\par\pard\plain\ltrpar\ql\sb259\s13\sl448\slmult1\itap0{\f0\fs34\b\lang0{\*\listtag0}\abinodiroverride\ltrch 4. Software Adaptativo}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Cuando aprendemos a programar, enseguida aprendemos ciertos principios b\'e1sicos que hacen que nuestro software aumente su valor de uso: reutilizaci\'f3n, abstracci\'f3n, que sea usable para el usuario final, ... Sin embargo, no nos suelen preparar para que el software se adapte de manera autom\'e1tica a los cambios en las necesidades de usuario, en sus objetivos, \'f3 en el entorno.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Seg\'fan Peter Norvig (http://www.norvig.com) director de calidad de b\'fasqueda de Google: [El software adaptativo usa informaci\'f3n disponible acerca de cambios en su entorno para mejorar su comportamiento]. Es decir, el software tiene capacidad de adaptarse al comportamiento del usuario sin que este lo pida de una manera expl\'edcita, entendiendo como usuario a una persona u otro sistema.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch El software adaptativo ha tenido su caldo de cultivo en la miner\'eda de datos (data mining), esto es, la extracci\'f3n no trivial, impl\'edcita, previamente desconocida y potencialmente usable de informaci\'f3n de inter\'e9s en grandes cantidades de datos. El proceso de extraer esa informaci\'f3n se basa en aplicar algoritmos de aprendizaje autom\'e1tico.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Todo esto que puede estar pareciendo un poco de ciencia ficci\'f3n est\'e1 teniendo una fuerte eclosi\'f3n en aplicaciones populares para el usuario final. Fij\'e9monos, por ejemplo, en el problema del spam, actualmente evolution, mozilla, kmail y otros lectores de correo est\'e1n introduciendo facilidades para separar el spam del ham, es decir, el correo electr\'f3nico deseado, del no deseado. Para ello normalmente se aplica un algoritmo de aprendizaje autom\'e1tico denominado Naive Bayes. Muchos sitios web tambi\'e9n est\'e1n incorporando estos m\'e9todos para incrementar ventas \'f3 visitas. Es conocido el caso de Amazon que utiliza filtrado colaborativo para encontrar usuarios con perfiles de compra similares y recomendar productos personalizados. Un ejemplo un poco m\'e1s hispano es la Guia Campsa (http://www.guiacampsa.com) que utiliza una neurona articial para ordenar el orden de rutas que prefieren los usuarios.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Ahora que se tiene un poco m\'e1s claro para que puede ser \'fatil hoy el aprendizaje autom\'e1tico, se ver\'e1 c\'f3mo crear un sistema que aprenda a decidir si es un buen d\'eda para jugar al tenis en funci\'f3n de una serie de atributos: fuerza del viento (wind), humedad (humidity), temperatura (temperature) y previsi\'f3n del cielo (outlook). Para ello vamos a utilizar el algoritmo ID3 implementado en lisp por Tom Mitchell, uno de los padres del aprendizaje autom\'e1tico. Para ello es necesario instalar un int\'e9rprete de lisp (si usamos debian y queremos cmucl) }{\f2\fs20\b\lang1034{\*\listtag0}apt-get install cmucl}{\f2\fs20\lang1034{\*\listtag0} y ahora se descarga el programa lisp en cuesti\'f3n }{\f2\fs20\b\lang1034{\*\listtag0}wget -c http://www-2.cs.cmu.edu/afs/cs/project/theo-11/www/decision-trees.lisp}{\f2\fs20\lang1034{\*\listtag0}. Finalmente, se ejecuta la traza que viene en el propio fichero:}
\par\pard\plain\ltrpar\ql\li960\sb200\sl259\slmult1\itap0{\f2\fs20\b\lang0{\*\listtag0}\abinodiroverride\ltrch Ejemplo 3. Traza de ID3 dada}
\par\pard\plain\ltrpar\ql\li960\sb99\sl233\slmult1\itap0{\f2\fs20\b\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch [18:41][darroyo@turing:~/programacion/lisp]$ lisp}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch CMU Common Lisp CVS release-19a 19a-release-20040728 + minimal debian patches, running on turing}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch With core: /usr/lib/cmucl/lisp.core}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Dumped on: Fri, 2004-10-08 11:51:05+02:00 on turing}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch For support see http://www.cons.org/cmucl/support.html Send bug reports to the debian BTS.}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch or to pvaneynd@debian.org}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch type (help) for help, (quit) to exit, and (demo) to see the demos}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Loaded subsystems:}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     Python 1.1, target Intel x86}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch     CLOS based on Gerd's PCL 2004/04/14 03:32:47}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch * (load "decision-trees.lisp")}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch ; Loading #p"/home/darroyo/programacion/lisp/decision-trees.lisp".}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Warning:  Declaring *DATA* special.}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch T}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch * *training.examples*}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch (D14 D13 D12 D11 D10 D9 D8 D7 D6 D5 D4 D3 D2 D1)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch * (print.entity 'd6)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch (PLAY.TENNIS? NO WIND STRONG HUMIDITY NORMAL TEMPERATURE COOL OUTLOOK RAIN)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch (PLAY.TENNIS? NO WIND STRONG HUMIDITY NORMAL TEMPERATURE COOL OUTLOOK RAIN)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch * (setq tree (id3 *training.examples*}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch                 'play.tennis?}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch                 '(outlook temperature humidity wind)))}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch Warning:  Declaring TREE special.}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch (OUTLOOK (SUNNY (HUMIDITY (NORMAL YES) (HIGH NO))) (OVERCAST YES)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch  (RAIN (WIND (STRONG NO) (WEAK YES))))}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch * (print.tree tree)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch OUTLOOK}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch  = SUNNY}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch      HUMIDITY}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       = NORMAL => YES}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       = HIGH => NO}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch  = OVERCAST => YES}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch  = RAIN}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch      WIND}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       = STRONG => NO}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       = WEAK => YES}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch NIL}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch * (classify 'd6 tree)}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}
\par}\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch NO}
\par\pard\plain\ltrpar\ql\li960\sl233\slmult1\itap0{\f3\fs18\lang0{\*\listtag0}\abinodiroverride\ltrch       }
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Este algoritmo de clasificaci\'f3n va construyendo un \'e1rbol de clasificaci\'f3n escogiendo en cada paso el atributo que tiene una mayor entrop\'eda, es decir, el atributo que tiene valores m\'e1s variados. Despu\'e9s de haber recibido los ejemplos de entrenamiento ya podemos saber si, por ejemplo, la variable d6 es un ejemplo de dia para jugar al tenis \'f3 no: }{\f2\fs20\b\lang1034{\*\listtag0}(classify 'd6 tree)}{\f2\fs20\lang1034{\*\listtag0}.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Os animo a modificar un poco el c\'f3digo, cambiando los ejemplos de entrenamiento, para familiarizarse con el mecanismo. El lector interesado en librer\'edas de aprendizaje autom\'e1tico, puede visitar las siguientes referencias que, adem\'e1s, son libres:}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Torch (http://www.torch.ch/): librer\'eda escrita en C++ con licencia BSD, implementa una gran cantidad de algoritmos de aprendizaje: redes neuronales, K-nearest-neighbors, modelos de Markov, clasificadores bayesianos, ...}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Weka (http://www.cs.waikato.ac.nz/~ml/weka/): librer\'eda escrita en Java con licencia GPL, es bastante popular en el mundo acad\'e9mico y tiene un interfaz gr\'e1fico bastante amigable.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Bow (http://www-2.cs.cmu.edu/~mccallum/bow/): herramienta escrita en C con licencia GPL para el an\'e1lisis estad\'edstico de textos, clasificaci\'f3n autom\'e1tica de documentos desarrollada en Carnegie Mellon.}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Russell y Norvig desarrollaron para el libro "Inteligencia Artificial: Un Enfoque Moderno" una buena cantidad de c\'f3digo lisp con una licencia similar a una BSD, entre el que hay bastantes algoritmos de aprendizaje autom\'e1tico (http://www.di.unipi.it/~simi/AIMA/doc/overview-LEARNING.html). Si usas debian puedes descarg\'e1rtelos mediante }{\f2\fs20\b\lang0{\*\listtag0}apt-get install cl-aima}{\f2\fs20\lang0{\*\listtag0}.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch El software adaptativo permite solucionar problemas d\'f3nde el conocimiento est\'e1tico no llega. El caso del spam es tal vez el m\'e1s popular, no obstante, sistemas expertos, sistemas web, firewalls, encaminadores, etc. est\'e1n incluyendo enfoques adaptativos para mejorar la eficacia de sus sistemas.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch El objetivo de este apartado ha sido vislumbrar el modo en que puede aprender una m\'e1quina y, la aplicaci\'f3n que tiene este aprendizaje de m\'e1quinas en el software que utilizamos en nuestra vida cotidiana.}
\par\pard\plain\ltrpar\ql\sb259\s13\sl448\slmult1\itap0{\f0\fs34\b\lang0{\*\listtag0}\abinodiroverride\ltrch 5. Agentes Inteligentes}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Para Russell y Norvig un agente es cualquier cosa capaz de percibir su medioambiente mediante sensores y actuar en ese medio mediante actuadores. Todo agente tiene una funci\'f3n u objetivo. Por ejemplo, un agente humano de bolsa tiene el objetivo de comprar y vender acciones respondiendo a los est\'edmulos iniciados por su cliente y captados por sus sentidos. Una aspiradora tiene la funci\'f3n de aspirar cuando capta que ha sido encendida y no aspirar cuando es apagada.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Un agente inteligente \'f3 racional trata de maximizar el valor de una medida de rendimiento, dada la secuencia de percepciones que ha observado hasta el momento.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Repitamos lo dicho ejemplific\'e1ndolo. Un agente inteligente tiene un objetivo abstracto (ej: "ofrecer a un usuario informaci\'f3n interesante"), tiene una forma de evaluar si esa informaci\'f3n es interesante (ej: "el usuario lee la informaci\'f3n sugerida"), tiene unos actuadores (ej: "una caja html donde presenta enlaces interesantes") y tiene unos sensores (ej: "un conjunto de sitios web para recoger informaci\'f3n y filtrar la que sea interesante y el conjunto de clicks que puede hacer \'f3 no el usuario de todos esos sitios web"). La pregunta ahora es \'bfc\'f3mo mejorar ese rendimiento?.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Para Peter Norvig la programaci\'f3n estructurada tiene asociadas las aplicaciones basadas en entrada/salida, la programaci\'f3n orientada a objetos las aplicaciones basadas en eventos y la programaci\'f3n adaptativa las aplicaciones basadas en agentes inteligentes. Es decir, la respuesta a nuestra pregunta es usamos aprendizaje autom\'e1tico para mejorar el rendimiento.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch No obstante, el deseo de desarrollar software adaptativo no es la \'fanica raz\'f3n para utilizar una metodolog\'eda de programaci\'f3n orientada a agentes. Los agentes tienen su campo de cultivo en la Inteligencia Artificial Distribuida (IAD) que, como su nombre indica, es la rama de la Inteligencia Artificial que trata de resolver de manera distribuida sus problemas, aprovechando as\'ed las ventajas propias de la programaci\'f3n distribuida: robustez, paralelismo y escalabilidad.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Desde un punto de vista de ingenier\'eda de software este paradigma tambi\'e9n supone una evoluci\'f3n a las necesidades de reutilizaci\'f3n y encapsulamiento del c\'f3digo. Partiendo de la programaci\'f3n orientada a objetos, el mundo est\'e1 compuesto por elementos llamados objetos que tienen atributos a los que es posible aplicarles m\'e9todos y estos pueden abstraerse a clases y estas clases pueden abstraerse en otras clases de las que heredan m\'e9todos y/o atributos \'f3 de las que se componen. Sin embargo, este modelo del mundo es incompleto, pues en el mundo tambi\'e9n existen agentes con capacidades de aprendizaje y autonom\'eda.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Tambi\'e9n podemos usar agentes inteligentes para entender mejor el conocimiento \'f3 para poder hacer simulaci\'f3n.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Hay bastante software denominado como software de agentes (http://linuxselfhelp.com/HOWTO/AI-Alife-HOWTO-6.html) para gnu/linux, sin embargo, no siempre se entiende la filosof\'eda de agentes que subyace. La herramienta para desarrollar agentes m\'e1s extendida y utilizada es JADE (http://jade.tilab.com/) gracias a sus buenas herramientas gr\'e1ficas, documentaci\'f3n, soporte, licencia LGPL, ... por desgracia para quienes no queremos caer en la "Trampa de Java" (http://gnu.fyxm.net/philosophy/java-trap.es.html) requiere JDK 1.4 \'f3 posteriores.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Para ampliar informaci\'f3n acerca de teor\'eda de agentes recomiendo: Multiagent Systems: A Survey from a Machine Learning Perspective (http://www-2.cs.cmu.edu/afs/cs/usr/pstone/public/papers/97MAS-survey/revised-survey.html). Aunque leer Adaptive Software (http://www.norvig.com/adapaper-pcai.html) es un excelente complemento que aclara muchas ideas.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Tal vez este apartado no deber\'eda estar en este art\'edculo, ya que no hay una aplicaci\'f3n pr\'e1ctica a los agentes inteligentes, debido a que es una cuesti\'f3n m\'e1s metodol\'f3gica que facilita, entre otras cosas, poder hacer adaptaci\'f3n.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}
\par}\pard\plain\ltrpar\ql\sb259\s13\sl448\slmult1\itap0{\f0\fs34\b\lang0{\*\listtag0}\abinodiroverride\ltrch 6. Reflexiones, Conclusiones Referencias y Agradecimientos}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch En este art\'edculo se ha visto que existe una cierta correlaci\'f3n entre software libre e inteligencia artificial debido a que existen multitud de herramientas libres para tratar las diferentes problem\'e1ticas que se plantean. En mi humilde opini\'f3n no creo que sea casual que el mismo Richard Stallman trabajara en el laboratorio de Inteligencia Artificial del MIT poco antes de fundar el proyecto gnu. }
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Tambi\'e9n he tratado de desmitificar ciertos aspectos de la IA que la hacen parecer algo m\'e1gico \'f3 carente de utilidad real y dejando entrever que es uno de los principales motores de la evoluci\'f3n de la inform\'e1tica. No es casual que las principales \'e1reas de investigaci\'f3n de cualquier universidad sea en temas de IA, como tampoco es casual que las empresas punteras en tecnolog\'eda tengan muy en cuenta este \'e1rea de la inform\'e1tica.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch En el art\'edculo primeramente, se ha mostrado c\'f3mo esos juegos con los que cada d\'eda nos divertimos llevan en su motor algoritmos de IA. Despu\'e9s se ha revisado el modo en que la IA permite modelar el conocimiento de un experto con herramientas integradas. Seguidamente, se mostr\'f3 que el software puede ser mejorado de una manera aut\'f3noma y que el enfoque de agentes es bueno para resolver ese problema.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Han quedado bastantes temas que deber\'e1n ser tratados en un pr\'f3ximo art\'edculo: planificaci\'f3n, procesamiento del lenguaje natural, sentido com\'fan, rob\'f3tica, computaci\'f3n neuronal ... Mientras tanto, os invito a experimentar sobre los temas tratados haciendo uso de esta selecci\'f3n de referencias:}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}Dentro del linux documentation project encontramos este howto de inteligencia y vida artificial (http://linuxselfhelp.com/HOWTO/AI-Alife-HOWTO.html)}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}La claridad de ideas de Peter Norvig (http://www.norvig.com) y la cantidad de c\'f3digo aportado le hacen un sitio imprescindible}
\par\pard\plain\ltrpar\ql\fi-200\li1160\sb99\sl259\slmult1\itap0\tx1160{\f2\fs16\lang0{\*\listtag0}\abinodiroverride\ltrch \uc1\u8226\'95\tab }{\f2\fs20\lang0{\*\listtag0}En Ourproject (http://www.ourproject.org) se est\'e1 formando un grupo que pretende ser un laboratorio de inteligencia artificial y software libre.}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch Agradecer a Jes\'fas Gonz\'e1lez Boticario (http://www.ia.uned.es/~jgb/) y Olga Santos su apoyo, comentarios y sugerencias a este art\'edculo.}
\par\pard\plain\ltrpar\ql\sb259\s13\sl448\slmult1\itap0{\f0\fs34\b\lang0{\*\listtag0}\abinodiroverride\ltrch 7. Sobre el autor}
\par\pard\plain\ltrpar\ql\li960\sb400\sl259\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}\abinodiroverride\ltrch David Arroyo Men\'e9ndez (http://davidam.no-ip.info) es Ingeniero T\'e9cnico en Inform\'e1tica de Sistemas por la UNED, donde estudia el segundo ciclo de dicha titulaci\'f3n. Actualmente trabaja en el Proyecto Europeo de Investigaci\'f3n Alfanet (http://alfanet.ia.uned.es).}
\par\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\f2\fs20\lang1034{\*\listtag0}}}
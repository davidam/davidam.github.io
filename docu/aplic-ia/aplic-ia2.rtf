{\rtf1\ansi\deff0
{\fonttbl{\f1\fnil\fcharset0 Arial;}
{\f0\fnil\fcharset0 Times New Roman;}
}
{\colortbl;}{\stylesheet{\s1 Heading 1;}{\s2 Heading 2;}{\s3 Heading 3;}{\s4 Heading 4;}{\s5 Heading 5;}{\s6 Heading 6;}{\s7 Heading 7;}{\s8 Heading 8;}{\s9 Heading 9;}}
\deflang1024\notabind\facingp\hyphauto1\widowctrl
\sectd\plain\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1920\headery0\footery0\pgndec\titlepg{\headerf\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {}\par}{\footerf\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerl\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Aplicaciones Pr\'e1cticas de Inteligencia Artificial}\par}{\footerl\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}{\headerr\pard\sl-240\sb770\sa430\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 Aplicaciones Pr\'e1cticas de Inteligencia Artificial}\par}{\footerr\pard\sl-240\sb770\sa910\plain\tqc\tx4680\tqr\tx9360 {}\tab {}\tab {\i\fs20 \chpgn }\par}\pard\sb373\li960\sl647\qc \b\fs49\f1 Aplicaciones Pr\'e1cticas de Inteligencia Artificial\keepn\hyphpar0\par\pard\sb216\li960\sl449\qc \fs34 David Arroyo Men\'e9ndez\keepn\hyphpar0\par\pard\sb259\s2\sl449 1. Introducci\'f3n\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1034\f0 En la primera parte de este art\'edculo se comenz\'f3 realizando una peque\'f1a introducci\'f3n a las problem\'e1ticas que se abordaban en la inteligencia artificial y se expusieron algunas de ellas: juegos, sistemas expertos, software adaptativo y agentes inteligentes.\hyphpar0\par\pard\sb400\li960\sl260 En este art\'edculo se mostrar\'e1n algunos temas pendientes: c\'f3mo conseguir que las m\'e1quinas hagan planes, c\'f3mo pueden comprender el lenguaje humano, c\'f3mo pueden pensar con neuronas y c\'f3mo aplicar todas estas cuestiones a tareas tales como la rob\'f3tica, entre otras cosas. Todo ello viendo la utilidad de estas soluciones y enlazado con un mont\'f3n de software libre con el que experimentar.\hyphpar0\par\pard\sb259\s2\sl449 \b\fs34\lang1024\f1 2. Planificacion\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1034\f0 Llamaremos planificaci\'f3n al proceso de b\'fasqueda y articulaci\'f3n de una secuencia de acciones que permitan alcanzar un objetivo. Por ejemplo, si nuestro objetivo es viajar desde un pueblo perdido de Asturias y queremos llegar a Guatemala la secuencia de acciones ser\'edan los distintos transportes que se deben tomar para llegar. Otro ejemplo podr\'eda ser que tuvi\'e9ramos un robot en un laberinto y nuestro objetivo fuera sacarle de \'e9l; en tal caso, nuestras acciones ser\'edan los tramos recorridos en l\'ednea recta y los giros dados por el robot.\hyphpar0\par\pard\sb400\li960\sl260 Para formalizar el problema de la planificaci\'f3n existen 2 notaciones principales: ADL y STRIPS (http://www.rci.rutgers.edu/~cfs/472_html/Planning/STRIPS_plan_472.html). Ambas coinciden en utilizar la l\'f3gica para representar estado inicial, objetivo y acciones. Tambi\'e9n coinciden en que, para aplicar una acci\'f3n, es necesario cumplir unas precondiciones y, tras haber ejecutado la acci\'f3n, habr\'e1 provocado unos efectos.\hyphpar0\par\pard\sb400\li960\sl260 Para obtener la secuencia de acciones, es decir, el resultado al problema de la planificaci\'f3n, existen varios enfoques:\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 B\'fasquedas en el espacio de estados que operan hacia adelante (desde el estado inicial), o hacia atr\'e1s (desde el objetivo) aplicando las acciones. Tambi\'e9n existen heur\'edsticas (estrategias) eficaces que nos ayudan en la b\'fasqueda. Estos enfoques funcionan bien cuando los subobjetivos son independientes.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Si los subobjetivos no son independientes suele ser buena idea utilizar algoritmos de Planificaci\'f3n de Orden Parcial (POP), que exploran el espacio de planes sin comprometerse con una secuencia de acciones totalmente ordenada. Trabajan hacia atr\'e1s, desde el objetivo y a\'f1aden acciones para planificar c\'f3mo alcanzar cada subobjetivo.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Otras estrategias prometedoras son el algoritmo GRAPHPLAN (http://www-2.cs.cmu.edu/~avrim/graphplan.html) y el algoritmo SATPLAN (http://www.cs.washington.edu/homes/kautz/satplan/).\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Cuando no se trabaja en mundos cerrados, sino en el mundo real, debemos tener en cuenta varias consideraciones. Muchas acciones consumen recursos: tiempo, dinero, materias primas, etc. por lo que debemos tener en cuenta medidas num\'e9ricas. Las redes jer\'e1rquicas de tareas (HTN) (http://www.cs.umd.edu/projects/plus/HTN/) permiten tener sugerencias sobre el dominio por parte del dise\'f1ador. La informaci\'f3n incompleta puede ser manejada mediante planificaci\'f3n que utilice acciones sensoriales para obtener la informaci\'f3n que necesita. La planificaci\'f3n multiagente es necesaria cuando existen otros agentes en el entorno con los que cooperar, competir, o coordinarse.\hyphpar0\par\pard\sb400\li960\sl260 \lang1034 Los problemas y soluciones que se abordan en planificaci\'f3n tienen aplicaciones directas en gesti\'f3n de tareas (workflow), control de misiones complejas (espaciales, sat\'e9lites, militares, etc.), turismo (visitas a ciudades, planificar rutas, ...), procesos de ense\'f1anza/aprendizaje, rob\'f3tica (planificar caminos), ...\hyphpar0\par\pard\sb400\li960\sl260 Para la problem\'e1tica de la planificaci\'f3n, las licencias libres han brillado por su ausencia. No obstante, todos los algoritmos se distribuyen con su c\'f3digo, lo cual tambi\'e9n es cierto en arquitecturas integradas como PRODIGY (http://www-2.cs.cmu.edu/afs/cs.cmu.edu/project/prodigy/Web/prodigy-home.html), muy usadas en planificaci\'f3n.\hyphpar0\par\pard\sb259\s2\sl449 \b\fs34\lang1024\f1 3. Procesamiento de Lenguaje Natural\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1034\f0 Antes de abordar qu\'e9 es el procesamiento del lenguaje natural (\'f3 lenguaje humano), pensemos por un momento qu\'e9 es la compresi\'f3n. Seg\'fan Rich y Knigth "comprender algo es transformarlo de una representaci\'f3n a otra, en donde la segunda representaci\'f3n se ha elegido para que se corresponda con un conjunto de acciones posibles que podr\'edan llevarse a cabo, y en donde se ha dise\'f1ado la correspondencia de forma que para cada suceso se realice una acci\'f3n apropiada". En definitiva, comprender algo es transformarlo en una representaci\'f3n que nos sea m\'e1s \'fatil para lograr nuestro objetivo.\hyphpar0\par\pard\sb400\li960\sl260 \'bfPara qu\'e9 podemos querer que una m\'e1quina comprenda lo que pone en un texto? Lo primero que se nos puede ocurrir es que sirva para comunicarnos con ella como si de una persona se tratara, pero para ello no solo requerir\'eda comprender nuestras palabras, sino tambi\'e9n las emociones con las que las expresamos, lo cual es algo m\'e1s complejo. La traducci\'f3n autom\'e1tica desde un lenguaje natural a otro es algo para lo que solo necesitamos comprender el significado neutral de las palabras. Si conseguimos que un ordenador comprenda, tambi\'e9n nos va a ayudar en tareas de recuperaci\'f3n de la informaci\'f3n; me refiero a buscadores m\'e1s eficaces que sepan relacionar mejor unas palabras o frases con otras, e incluso independientemente del idioma.\hyphpar0\par\pard\sb400\li960\sl260 Para realizar estas tareas es necesario comprender un texto; esto es lo que nos proporciona el procesamiento del lenguaje natural. Veamos las fases de las que se compone [Rich y Knight, 1994]:\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16\lang1024 \'95\tab \fs20 An\'e1lisis morfol\'f3gico: Se analizan los componentes de las palabras individuales y se separan de las palabras los constituyentes que no forman parte de ellas, como los s\'edmbolos de puntuaci\'f3n\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 An\'e1lisis sint\'e1ctico: Se transforman las secuencias lineales de palabras en ciertas estructuras que muestran la forma en que las palabras se relacionan entre s\'ed. Se pueden rechazar algunas secuencias de palabras si infringen las reglas del lenguaje sobre la forma en que las palabras pueden combinarse. Ej: "ni\'f1a la come mucho" se rechazar\'eda.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 An\'e1lisis sem\'e1ntico: Se asigna significado a las estructuras creadas por el analizador sint\'e1ctico. Es decir, se hace una correspondencia entre las estructuras sint\'e1cticas y los objetos del dominio de la tarea. Las estructuras en las que no se pueda realizar tal correpondecia se rechazan. Ej: "Las ideas verdes incoloras duermen furiosamente" se rechazar\'eda\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Integraci\'f3n del discurso: El significado de una frase individual puede depender de las frases precedentes y puede influenciar el significado de las frases posteriores. Por ejemplo, la palabra "lo" en "Jaime lo quiso" depende del contexto del discurso, mientras que la palabra "Jaime" puede influenciar el significado de frases posteriores como "\'c9l vive en Madrid".\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 An\'e1lisis de la pragm\'e1tica: La estructura que representa qu\'e9 se ha dicho se reinterpreta para determinar su significado actual. Ej: "\'bfSabe qu\'e9 hora es?" se reintepreta como petici\'f3n de hora.\hyphpar0\par\pard\sb400\li960\sl260 \lang1034 Hasta ahora hemos estado hablando del procesamiento del lenguaje escrito, si quisi\'e9ramos realizar procesamiento del lenguaje oral, necesitar\'edamos conocimiento adicional sobre fonolog\'eda, as\'ed como suficiente informaci\'f3n adicional para manejar las posibles ambig\'fcedades que pudieran surgir.\hyphpar0\par\pard\sb400\li960\sl260 Existen varias herramientas libres para tratar el procesamiento del lenguaje natural. Podemos encontrar malaga-bin y mmorph. Sin embargo, creo que para juguetear y/o iniciarse en este campo es m\'e1s adecuado nltk (http://nltk.sourceforge.net/) (Natural Language Toolkit), escrito en python y con una licencia de creative commons (http://creativecommons.org/licenses/by-nc-sa/1.0/).\hyphpar0\par\pard\sb259\s2\sl449 \b\fs34\lang1024\f1 4. Computaci\'f3n Neuronal\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1034\f0 Bien, hasta aqu\'ed hemos visto que las m\'e1quinas pueden imitar comportamientos humanos para un gran n\'famero de tareas. De hecho, incluso pueden aplicarse algoritmos de aprendizaje que, para ciertas tareas como el spam, dan muy buenos resultados. La siguiente cuesti\'f3n entonces es \'bfpueden las m\'e1quinas pensar tal y como lo hacemos los humanos?\hyphpar0\par\pard\sb400\li960\sl260 La naturaleza nos ha dotado con un sistema de c\'f3mputo basado en una enorme red de neuronas. Si las m\'e1quinas pudieran simular tal sistema de c\'f3mputo \'bfno estar\'edan entonces en condiciones de pensar tal y como lo hacemos las personas?\hyphpar0\par\pard\sb400\li960\sl260 En primer lugar, pensemos qu\'e9 es una neurona. Una neurona est\'e1 formada por el cuerpo celular y diferentes prolongaciones: el ax\'f3n, por el que transitan los impulsos nerviosos o potenciales de acci\'f3n desde el cuerpo celular hacia la siguiente c\'e9lula, y la/s dendritas, con n\'famero y estructura variable seg\'fan el tipo de neurona, y que transmiten los potenciales de acci\'f3n desde las neuronas adyacentes hacia el cuerpo celular. Se podr\'eda decir que las dendritas son entradas y el ax\'f3n es la salida.\hyphpar0\par\pard\sb400\li960\sl260 Ahora bien, \'bfc\'f3mo se decide si tras recibir entradas se produce o no una salida, y qu\'e9 salida se produce? Pues bien, la salida es la suma ponderada de las entradas seguida de una funci\'f3n umbral. Esto puede parecer un diodo: si el potencial de las entradas alcanza un cierto valor, entonces se produce la salida, y sino no. Sin embargo, difiere en ser ponderado. Se refiere a que no todos los valores de las entradas van a tener la misma importancia de cara a decidir si se produce o no la salida.\hyphpar0\par\pard\sb400\li960\sl260 Si nuestra neurona no es m\'e1s que un diodo con entradas ponderadas, entonces juntando unos diodos con otros en forma de red \'bfhar\'e1 el tipo de procesos que realizamos los humanos como, por ejemplo, aprender? Es curioso que para aprender solo es necesaria una neurona, y el aprendizaje consiste en modificar el valor de los pesos (la importancia de cada entrada) aplicando un algoritmo a nuestro valor de salida. \'bfY cual ser\'e1 ese algoritmo? Un psic\'f3logo llamado Donald O. Hebb enunci\'f3 una regla que dice que "las conexiones que unen diferentes neuronas que se encuentran activas en un instante dado se fortalecen". Se refiere a que si la neurona est\'e1 transmitiendo, las entradas que est\'b4n activas tendr\'e1n m\'e1s importancia de la que ya ten\'edn. Y esto es m\'e1s \'f3 menos la esencia de la computaci\'f3n neuronal, especialmente la no supervisada (que no requiere de un tutor), y esta es la que nos encontramos en la naturaleza.\hyphpar0\par\pard\sb400\li960\sl260 Pero en la pr\'e1ctica las redes neuronales artificiales no han creado en las m\'e1quinas comportamientos similares a los de las personas. Sin embargo, lo cierto es que los problemas que tradicionalmente son m\'e1s complejos para las m\'e1quinas (visi\'f3n artificial, reconocimiento del habla, etc.), se resuelven mejor utilizando redes neuronales que mediante otras perspectivas simb\'f3licas.\hyphpar0\par\pard\sb400\li960\sl260 La computaci\'f3n neuronal tiene como tarea gen\'e9rica la clasificaci\'f3n. Por ejemplo, pensemos que queremos averiguar en qu\'e9 im\'e1genes est\'e1 Wally y en qu\'e9 im\'b4genes no. Nuestras entradas ser\'edan las intensidades RGB de cada pixel de cada una de las im\'e1genes, y tendr\'eda una \'fanica salida que nos dir\'eda si est\'e1 o no.\hyphpar0\par\pard\sb400\li960\sl260 Las redes neuronales tienen un modelo inherentemente distribuido, puesto que un procesador puede simular una neurona. As\'ed mismo, son autoprogramables. La programaci\'f3n pasa por elegir un n\'famero de neuronas, las conexiones entre las mismas, un n\'famero de salidas, un n\'famero de entradas y una configuraci\'f3n inicial de pesos. Despu\'e9s bastar\'eda con alimentarla correctamente y, si el aprendizaje es supervisado, darle la adecuada realimentaci\'f3n humana\hyphpar0\par\pard\sb400\li960\sl260 Como siempre, para profundizar recomiendo jugar con el software libre disponible. Lo que he encontrado ha sido Fast Artificial Neural Network Library (fann) (http://fann.sourceforge.net/intro.html), Genesis (http://www.genesis-sim.org/GENESIS/) y, aunque no totalmente libre, tambi\'e9n creo importante destacar SNNS (http://www-ra.informatik.uni-tuebingen.de/SNNS/).\hyphpar0\par\pard\sb400\li960\sl260 Finalizar diciendo que, si bien los algoritmos de redes neuronales no son otra cosa que algoritmos de aprendizaje autom\'e1tico, debido a las implicaciones filos\'f3ficas que tienen he decidido tratarlo aparte.\hyphpar0\par\pard\sb259\s2\sl449 \b\fs34\lang1024\f1 5. Rob\'f3tica\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1034\f0 [Russell y Norvig, 2004]Los robots son agentes f\'edsicos que realizan tareas mediante la manipulaci\'f3n f\'edsica del mundo. Para ello se dotan de efectores, como pinzas, ruedas, brazos mec\'e1nicos, etc. Tambi\'e9n se equipan de sensores que les permiten percibir el entorno, como visores, sistemas de ultrasonidos, giroscopios, etc.\hyphpar0\par\pard\sb400\li960\sl260 El inter\'e9s de la IA en la rob\'f3tica se centra en los agentes inteligentes que manipulan el mundo f\'edsico. No obstante, tambi\'e9n es un campo de gran inter\'e9s para aplicar otras ideas de IA como planificaci\'f3n o visi\'f3n artificial (aplicar algoritmos de aprendizaje para el reconocimiento de formas).\hyphpar0\par\pard\sb400\li960\sl260 Las \'e1reas de aplicaci\'f3n de la rob\'f3tica son m\'faltiples: industria, agricultura, transporte, entornos peligrosos (donde no deber\'eda haber humanos), exploraci\'f3n (ej: viajes al espacio), salud (ej: cirug\'eda gracias a la precisi\'f3n milim\'e9trica), entretenimiento, ... \hyphpar0\par\pard\sb400\li960\sl260 Para experimentar en este \'e1rea respetando nuestras libertades es posible encontrar programas divertidos para la simulaci\'f3n de comportamientos rob\'f3ticos, como por ejemplo gnurobots (http://directory.fsf.org/GNU/gnurobots.html) o robocode (http://robocode.alphaworks.ibm.com/home/home.html). Este tipo de programas pueden llegar a dar mucho juego en la IA, de hecho, los bots del quake han sido materia de tesis doctoral (http://www.kbs.twi.tudelft.nl/Publications/MSc/2001-VanWaveren-MSc.html).\hyphpar0\par\pard\sb400\li960\sl260 Tambi\'e9n es interesante salirnos un poco del software y meternos en alg\'fan proyecto de hardware abierto, como Microb\'f3tica. (http://www.microbotica.es/web/ha.htm))\hyphpar0\par\pard\sb259\s2\sl449 \b\fs34\lang1024\f1 6. Agradecimientos y Conclusiones\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1034\f0 En primer lugar, agradecer a Ramiro Pareja, miembro de la rama de rob\'f3tica del grupo agassi (http://www.ieeesb.etsit.upm.es/ieee/index2.php?ojo=1) sus orientaciones acerca de los usos de este \'e1rea. As\'ed mismo, agradecer a Antonio Rodr\'edguez Anaya (http://www.ia.uned.es/personal/arodriguez/) sus comentarios acerca de planificaci\'f3n.\hyphpar0\par\pard\sb400\li960\sl260 Un afectuoso agradecimiento a todo el equipo de Mundo Linux por la oportunidad de escribir este art\'edculo y de poder hacerlo aplicando una licencia libre y muy especialmente a Margarita Padilla.\hyphpar0\par\pard\sb400\li960\sl260 En el anterior art\'edculo se trataron aplicaciones m\'e1s tradicionales \'f3 conocidas de la inteligencia artificial. En este segundo art\'edculo, se desarrollan aplicaciones de mayor actividad investigadora. En ambos el software libre est\'e1 presente con una fuerza notable dotando de herramientas al investigador \'f3 estudiante en m\'faltiples \'e1reas.\hyphpar0\par\pard\sb400\li960\sl260 Si bien la inteligencia artificial aporta soluciones para casi todos las cuestiones que nos caracterizan como humanos e inteligentes, a\'fan dista bastante para que realice dichas tareas de la misma manera y con la misma eficacia que lo hacen las personas. Sin embargo, las soluciones aportadas para resolverlos tienen aplicaci\'f3nes interesantes en m\'faltiples \'e1reas de nuestra vida cotideana que nos hacen la vida m\'e1s f\'e1cil.\hyphpar0\par\pard\sb400\li960\sl260 Espero que este art\'edculo ayude a despertar el inter\'e9s por la IA entre los usuarios de software libre y, a que la comunidad que existe alrededor de la inteligencia artificial se interese a\'fan m\'e1s por el software libre. Al menos, s\'ed espero que los lectores hayais disfrutado tanto ley\'e9ndo el presente art\'edculo como yo escribi\'e9ndolo.\hyphpar0\par\pard\sb259\s2\sl449 \b\fs34\lang1024\f1 7. Referencias\keepn\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \b0\fs16\f0 \'95\tab \fs20 Rich, E. y Knight K. (1994). Inteligencia Artificial. Madrid: McGraw Hill\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Russell, S. J. y Norvig P. (2004). Inteligencia Artificial. Un Enfoque Moderno. Segunda ed. Madrid: Pearson Educaci\'f3n S.A.\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Howto de inteligencia y vida artificial (http://linuxselfhelp.com/HOWTO/AI-Alife-HOWTO.html)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 Enciclopedia Libre (http://enciclopedia.us.es/)\hyphpar0\par\pard\sb100\li1160\sl260\fi-200 \tx1160 \fs16 \'95\tab \fs20 P\'e1gina personal de Peter Norvig (http://www.norvig.com/)\hyphpar0\par\pard\sb259\s2\sl449 \b\fs34\f1 8. Sobre el autor\keepn\hyphpar0\par\pard\sb400\li960\sl260 \b0\fs20\lang1034\f0 David Arroyo Men\'e9ndez (http://davidam.no-ip.info) es Ingeniero T\'e9cnico en Inform\'e1tica de Sistemas por la UNED, donde estudia el segundo ciclo de dicha titulaci\'f3n. Actualmente trabaja en el Proyecto Europeo de Investigaci\'f3n Alfanet (http://alfanet.ia.uned.es).\hyphpar0\par}
